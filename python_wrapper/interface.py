"""
This is a python script providing functions for initializing an atomic system
and running Monte Carlo and molecular dynamics simulations based on the avbmc
C++ librabry. It does not add any functionality to the C++ library whatsoever,
but simplifies some tasks.

For less advanced systems containing one box obly, the box is essentially the
system. We assume that this is the case for most of the usage of this code. 
For the average user, it does not matter whether a method belongs to the system
or box object. In fact, having to remember the method origins makes the code
less user-friendly. This script was written as a second wrapper for the AVBMC
python-wrapper to cover the most common operations. The pure object-oriented
interface generated by pybind11 can still be used if preferred.

Author: Even Marius Nordhagen
Email: evenmn@mn.uio.no
Date: 2022-02-27 (last updated 2022-02-27)
"""

from avbmc_core import *

# initialize system and box
system = System("dir")
box_ = Box(system, 2)


def set_temp(temp):
    """ Set the system temperature.
    """
    system.set_temp(temp)

def set_chempot(chempot):
    """ Set the system chemical potential.
    """
    system.set_chempot(chempot)

def set_potential(potential, box=box_, **kwargs):
    """ Set interaction potential.
    """
    if potential.lower() == "idealgas":
        obj = IdealGas(box, **kwargs)
    elif potential.lower() == "lennardjones":
        obj = LennardJones(box, **kwargs)
    elif potential.lower() == "vashishta":
        obj = Vashishta(box, **kwargs)
    else:
        raise NotImplementedError
    box.set_forcefield(obj)
    return obj

def add_move(move, box=box_, prob=1., **kwargs):
    """ Add move to list of moves
    """
    if move.lower() == "trans":
        obj = Trans(system, box, **kwargs)
    elif move.lower() == "transmh":
        obj = TransMH(system, box, **kwargs)
    else:
        raise NotImplementedError
    system.add_move(obj, prob)
    return obj

def add_constraint(constraint, box=box_, **kwargs):
    """ Add constraint to list of constraints
    """
    if constraint.lower() == "mindistance":
        obj = MinDistance(box, **kwargs)
    elif constraint.lower() == "maxdistance":
        obj = MaxDistance(box, **kwargs)
    elif constraint.lower() == "minneigh":
        obj = MinNeigh(box, **kwargs)
    elif constraint.lower() == "maxneigh":
        obj = MaxNeigh(box, **kwargs)
    elif constraint.lower() == "stillinger":
        obj = Stillinger(box, **kwargs)
    else:
        raise NotImplementedError
    box.add_constraint(obj)
    return obj

def new_box(memory_intensity=2):
    """ Add box to the system
    """
    box = Box(system, memory_intensity)
    system.add_box(box)
    return box
